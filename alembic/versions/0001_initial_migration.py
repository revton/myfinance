"""Initial migration - Create transactions table from Pydantic models

Revision ID: 0001
Revises: 
Create Date: 2024-01-01 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transactions',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_transactions_amount', 'transactions', ['amount'], unique=False)
    op.create_index('idx_transactions_created_at', 'transactions', ['created_at'], unique=False)
    op.create_index('idx_transactions_type', 'transactions', ['type'], unique=False)
    op.create_check_constraint('check_amount_positive', 'transactions', 'amount > 0')
    op.create_check_constraint('check_description_length', 'transactions', 'length(description) <= 500')
    op.create_check_constraint('check_description_not_empty', 'transactions', 'length(description) >= 1')
    op.create_check_constraint('check_transaction_type', 'transactions', "type IN ('income', 'expense')")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_check_constraint('check_transaction_type', 'transactions', type_='check')
    op.drop_check_constraint('check_description_not_empty', 'transactions', type_='check')
    op.drop_check_constraint('check_description_length', 'transactions', type_='check')
    op.drop_check_constraint('check_amount_positive', 'transactions', type_='check')
    op.drop_index('idx_transactions_type', table_name='transactions')
    op.drop_index('idx_transactions_created_at', table_name='transactions')
    op.drop_index('idx_transactions_amount', table_name='transactions')
    op.drop_table('transactions')
    # ### end Alembic commands ### 